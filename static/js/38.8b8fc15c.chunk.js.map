{"version":3,"file":"static/js/38.8b8fc15c.chunk.js","mappings":"6PA+DA,UAvDc,WACV,IAAMA,GAAWC,EAAAA,EAAAA,MAEjBC,GAKMC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAKJ,EAALI,MACaC,EAAML,EAAnBM,UAAaD,OAGTE,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAQ,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTlB,GAASmB,EAAAA,EAAAA,IAAWL,IAAU,OAA7CC,EAAMC,EAAAI,KAKZC,QAAQC,KAAK,mBAAoBP,GACjCT,IAAQ,wBAAAU,EAAAO,OAAA,GAAAV,EAAA,KACT,gBARaW,GAAA,OAAAd,EAAAe,MAAA,KAAAC,UAAA,KAUhB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,cAAa,CAAAC,SAAA,EACdC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACAC,EAAAA,EAAAA,KAACC,EAAAA,UAAS,CAAAF,UACNF,EAAAA,EAAAA,MAACK,EAAAA,GAAU,CAACvB,SAAUJ,EAAaI,GAAUoB,SAAA,EAE7CF,EAAAA,EAAAA,MAACM,EAAAA,GAAW,CAACC,QAAQ,QAAOL,SAAA,CAAC,UAAMC,EAAAA,EAAAA,KAACK,EAAAA,GAAkB,CAAAN,SAAC,UACnDC,EAAAA,EAAAA,KAACM,EAAAA,IAAWC,EAAAA,EAAAA,GAAA,CAACC,KAAK,QAAQC,YAAY,oBAC9BnC,EAAS,QAAS,CAClBoC,SAAU,oBACVC,QAAS,CACLC,MAAO,IAAIC,OAAO,gCAClBC,QAAS,mCAIpBrC,EAAOsC,QAASf,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAAAjB,SAAEtB,EAAOsC,MAAMD,WAEhDjB,EAAAA,EAAAA,MAACM,EAAAA,GAAW,CAACC,QAAQ,WAAUL,SAAA,CAAC,aAASC,EAAAA,EAAAA,KAACK,EAAAA,GAAkB,CAAAN,SAAC,UAC7DC,EAAAA,EAAAA,KAACM,EAAAA,IAAWC,EAAAA,EAAAA,GAAA,CAACC,KAAK,WAAWC,YAAY,oDAAenC,EAAS,WAAY,CACzEoC,SAAU,uBACVO,UAAW,CACPL,MAAO,EACPE,QAAS,kDAGhBrC,EAAOyC,WAAYlB,EAAAA,EAAAA,KAACgB,EAAAA,EAAe,CAACG,KAAK,QAAOpB,SAAEtB,EAAOyC,SAASJ,WAEnEd,EAAAA,EAAAA,KAACoB,EAAAA,GAAS,CAACZ,KAAK,SAASa,QAAS,KAAKtB,SAAC,kBAK5D,C,kNC3DaG,EAAaoB,EAAAA,QAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oKAQxBlB,EAAcgB,EAAAA,QAAAA,MAAYG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gTAc1BrB,EAAcmB,EAAAA,QAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAO1BJ,EAAYE,EAAAA,QAAAA,OAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qXAiBzBR,EAAkBM,EAAAA,QAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mDAM7BnB,EAAqBiB,EAAAA,QAAAA,KAAWO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2C","sources":["pages/Login.jsx","pages/form.styled.js"],"sourcesContent":["import { Container, SectionStyled } from 'components/App.styled'\nimport React from 'react'\nimport { BtnStyled, FormStyled, InputStyled, LabelStyled, SpanStyledAsterisk, SpanStyledError } from './form.styled'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch } from 'react-redux'\nimport { loginThunk } from 'dal/requestUserAuth'\n\n\nconst Login = () => {\n    const dispatch = useDispatch();\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n      } = useForm()\n\n      const onSubmit = async (formData) => {\n        const result = await dispatch(loginThunk(formData))\n        // if(result.error) {\n\n        //     return;\n        // }\n        console.info('!!! Login Result', result)\n        reset();\n      }\n\n    return (\n        <SectionStyled>\n        <h1>Log in</h1>\n            <Container>\n                <FormStyled onSubmit={handleSubmit(onSubmit)}>\n                    \n                <LabelStyled htmlFor=\"email\">Email <SpanStyledAsterisk>*</SpanStyledAsterisk></LabelStyled>\n                    <InputStyled type=\"email\" placeholder='example@mail.com'\n                        {...register(\"email\", {\n                            required: 'Email is required',\n                            pattern: {\n                                value: new RegExp('[a-z0-9.]+@[a-z]+.[a-z]{2,3}'),\n                                message: 'Must contain correct e-mail'\n                            }\n                        })}\n                    />\n                    {errors.email && <SpanStyledError>{errors.email.message}</SpanStyledError>}\n\n                    <LabelStyled htmlFor=\"password\">Password <SpanStyledAsterisk>*</SpanStyledAsterisk></LabelStyled>\n                    <InputStyled type=\"password\" placeholder='••••••••' {...register(\"password\", {\n                        required: 'Password is required',\n                        minLength: {\n                            value: 7,\n                            message: 'Password must contain minimum 7 characters'\n                        }\n                    })} />\n                    {errors.password && <SpanStyledError role='alert'>{errors.password.message}</SpanStyledError>}\n\n                    <BtnStyled type='submit' onClick={null}>Log in</BtnStyled>\n                </FormStyled>\n            </Container>\n        </SectionStyled>\n    )\n}\n\nexport default Login","import styled from \"@emotion/styled\";\n\nexport const FormStyled = styled.form`\nmargin-left: auto;\nmargin-right: auto;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\ntransition: var(--transition-default);\n`\nexport const InputStyled = styled.input`\nbackground-color: var(--input-bg-clr);\nborder: solid 1px var(--txt-clr);\npadding: 5px;\ncolor: var(--input-txt-clr);\nletter-spacing: .15em;\n&:focus {\n    background-color: var(--input-focus-bg-clr);\n}\ntransition: var(--transition-default);\n&::placeholder {\n    font-style: italic;\n}\n`\nexport const LabelStyled = styled.label`\ntext-transform: capitalize;\nfont-weight: 600;\nfont-size: 18px;\nmargin-top: 10px;\n`\n\nexport const BtnStyled = styled.button`\ntext-transform: capitalize;\nfont-size: 18px;\nbackground-color: var(--btn-bg-clr);\nborder: solid 1px black;\npadding: 5px;\nmargin-top: 10px;\nwidth: 50%;\nalign-self: center;\n&:focus, &:hover, &:active {\n    background-color: var(--btn-bg-active-clr);\n}\n&:active {\n    box-shadow: 0 0 2px var(--input-txt-clr);\n}\ntransition: var(--transition-default);\n`\nexport const SpanStyledError = styled.span`\nmargin: 0;\npadding: 0;\ncolor: tomato;\n`\n\nexport const SpanStyledAsterisk = styled.span`\ncolor: tomato;\nfont-size: 14px;\n`"],"names":["dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","formData","result","_context","prev","next","loginThunk","sent","console","info","stop","_x","apply","arguments","_jsxs","SectionStyled","children","_jsx","Container","FormStyled","LabelStyled","htmlFor","SpanStyledAsterisk","InputStyled","_objectSpread","type","placeholder","required","pattern","value","RegExp","message","email","SpanStyledError","minLength","password","role","BtnStyled","onClick","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6"],"sourceRoot":""}