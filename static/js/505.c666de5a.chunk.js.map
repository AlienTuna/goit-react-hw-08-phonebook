{"version":3,"file":"static/js/505.c666de5a.chunk.js","mappings":"iOAgEA,UAzDe,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MAEjBC,GAKIC,EAAAA,EAAAA,MAJAC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAKJ,EAALI,MACaC,EAAML,EAAnBM,UAAaD,OASjB,OACIE,EAAAA,EAAAA,MAACC,EAAAA,cAAa,CAAAC,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJC,EAAAA,EAAAA,KAACC,EAAAA,UAAS,CAAAF,UACNF,EAAAA,EAAAA,MAACK,EAAAA,GAAU,CAACC,SAAUV,GAVjB,SAACW,GACdhB,GAASiB,EAAAA,EAAAA,IAAYD,IACrBV,GACJ,IAOyDK,SAAA,EAEzCF,EAAAA,EAAAA,MAACS,EAAAA,GAAW,CAACC,QAAQ,OAAMR,SAAA,CAAC,SAAKC,EAAAA,EAAAA,KAACQ,EAAAA,GAAkB,CAAAT,SAAC,UACrDC,EAAAA,EAAAA,KAACS,EAAAA,IAAWC,EAAAA,EAAAA,GAAA,CAACC,KAAK,OAAOC,YAAY,cAC7BpB,EAAS,OAAQ,CAAEqB,SAAU,uBAEpClB,EAAOmB,OAAQd,EAAAA,EAAAA,KAACe,EAAAA,EAAe,CAAAhB,SAAEJ,EAAOmB,KAAKE,WAE9CnB,EAAAA,EAAAA,MAACS,EAAAA,GAAW,CAACC,QAAQ,QAAOR,SAAA,CAAC,UAAMC,EAAAA,EAAAA,KAACQ,EAAAA,GAAkB,CAAAT,SAAC,UACvDC,EAAAA,EAAAA,KAACS,EAAAA,IAAWC,EAAAA,EAAAA,GAAA,CAACC,KAAK,QAAQC,YAAY,oBAC9BpB,EAAS,QAAS,CAClBqB,SAAU,oBACVI,QAAS,CACLC,MAAO,IAAIC,OAAO,gCAClBH,QAAS,mCAIpBrB,EAAOyB,QAASpB,EAAAA,EAAAA,KAACe,EAAAA,EAAe,CAAAhB,SAAEJ,EAAOyB,MAAMJ,WAEhDnB,EAAAA,EAAAA,MAACS,EAAAA,GAAW,CAACC,QAAQ,WAAUR,SAAA,CAAC,aAASC,EAAAA,EAAAA,KAACQ,EAAAA,GAAkB,CAAAT,SAAC,UAC7DC,EAAAA,EAAAA,KAACS,EAAAA,IAAWC,EAAAA,EAAAA,GAAA,CAACC,KAAK,WAAWC,YAAY,oDAAepB,EAAS,WAAY,CACzEqB,SAAU,uBACVQ,UAAW,CACPH,MAAO,EACPF,QAAS,kDAGhBrB,EAAO2B,WAAYtB,EAAAA,EAAAA,KAACe,EAAAA,EAAe,CAACQ,KAAK,QAAOxB,SAAEJ,EAAO2B,SAASN,WAEnEhB,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CAACb,KAAK,SAASc,QAAS,KAAK1B,SAAC,oBAK5D,C,kNC5DaG,EAAawB,EAAAA,QAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oKAQxBnB,EAAciB,EAAAA,QAAAA,MAAYG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gTAc1BtB,EAAcoB,EAAAA,QAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+FAO1BJ,EAAYE,EAAAA,QAAAA,OAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qXAiBzBb,EAAkBW,EAAAA,QAAAA,KAAWM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mDAM7BpB,EAAqBkB,EAAAA,QAAAA,KAAWO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2C","sources":["pages/SignUp.jsx","pages/form.styled.js"],"sourcesContent":["import React from 'react'\nimport { BtnStyled, FormStyled, InputStyled, LabelStyled, SpanStyledAsterisk, SpanStyledError } from './form.styled'\nimport { Container, SectionStyled } from 'components/App.styled'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch } from 'react-redux'\nimport { signupThunk } from 'dal/requestUserAuth'\n\nconst SignUp = () => {\n    const dispatch = useDispatch();\n\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n    } = useForm()\n\n    const onSubmit = (formData) => {\n        dispatch(signupThunk(formData))\n        reset();\n    }\n\n\n    return (\n        <SectionStyled>\n            <h1>Register new user</h1>\n            <Container>\n                <FormStyled onSubmit={handleSubmit(onSubmit)}>\n\n                    <LabelStyled htmlFor=\"name\">Name <SpanStyledAsterisk>*</SpanStyledAsterisk></LabelStyled>\n                    <InputStyled type=\"text\" placeholder='John Smith'\n                        {...register(\"name\", { required: 'Name is required' })}\n                    />\n                    {errors.name && <SpanStyledError>{errors.name.message}</SpanStyledError>}\n\n                    <LabelStyled htmlFor=\"email\">Email <SpanStyledAsterisk>*</SpanStyledAsterisk></LabelStyled>\n                    <InputStyled type=\"email\" placeholder='example@mail.com'\n                        {...register(\"email\", {\n                            required: 'Email is required',\n                            pattern: {\n                                value: new RegExp('[a-z0-9.]+@[a-z]+.[a-z]{2,3}'),\n                                message: 'Must contain correct e-mail'\n                            }\n                        })}\n                    />\n                    {errors.email && <SpanStyledError>{errors.email.message}</SpanStyledError>}\n\n                    <LabelStyled htmlFor=\"password\">Password <SpanStyledAsterisk>*</SpanStyledAsterisk></LabelStyled>\n                    <InputStyled type=\"password\" placeholder='••••••••' {...register(\"password\", {\n                        required: 'Password is required',\n                        minLength: {\n                            value: 7,\n                            message: 'Password must contain minimum 7 characters'\n                        }\n                    })} />\n                    {errors.password && <SpanStyledError role='alert'>{errors.password.message}</SpanStyledError>}\n\n                    <BtnStyled type='submit' onClick={null}>Register</BtnStyled>\n                </FormStyled>\n            </Container>\n        </SectionStyled>\n    )\n}\n\nexport default SignUp","import styled from \"@emotion/styled\";\n\nexport const FormStyled = styled.form`\nmargin-left: auto;\nmargin-right: auto;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\ntransition: var(--transition-default);\n`\nexport const InputStyled = styled.input`\nbackground-color: var(--input-bg-clr);\nborder: solid 1px var(--txt-clr);\npadding: 5px;\ncolor: var(--input-txt-clr);\nletter-spacing: .15em;\n&:focus {\n    background-color: var(--input-focus-bg-clr);\n}\ntransition: var(--transition-default);\n&::placeholder {\n    font-style: italic;\n}\n`\nexport const LabelStyled = styled.label`\ntext-transform: capitalize;\nfont-weight: 600;\nfont-size: 18px;\nmargin-top: 10px;\n`\n\nexport const BtnStyled = styled.button`\ntext-transform: capitalize;\nfont-size: 18px;\nbackground-color: var(--btn-bg-clr);\nborder: solid 1px black;\npadding: 5px;\nmargin-top: 10px;\nwidth: 50%;\nalign-self: center;\n&:focus, &:hover, &:active {\n    background-color: var(--btn-bg-active-clr);\n}\n&:active {\n    box-shadow: 0 0 2px var(--input-txt-clr);\n}\ntransition: var(--transition-default);\n`\nexport const SpanStyledError = styled.span`\nmargin: 0;\npadding: 0;\ncolor: tomato;\n`\n\nexport const SpanStyledAsterisk = styled.span`\ncolor: tomato;\nfont-size: 14px;\n`"],"names":["dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","errors","formState","_jsxs","SectionStyled","children","_jsx","Container","FormStyled","onSubmit","formData","signupThunk","LabelStyled","htmlFor","SpanStyledAsterisk","InputStyled","_objectSpread","type","placeholder","required","name","SpanStyledError","message","pattern","value","RegExp","email","minLength","password","role","BtnStyled","onClick","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6"],"sourceRoot":""}